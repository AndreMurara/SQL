
--1. Calcular Idade a partir da Data de Nascimento
--Esta ferramenta permite calcular a idade de uma pessoa com base na data de nascimento fornecida.

CREATE OR REPLACE FUNCTION calcular_idade (
    data_nascimento IN DATE
) RETURN NUMBER
IS
    idade NUMBER;
BEGIN
    idade := TRUNC(MONTHS_BETWEEN(SYSDATE, data_nascimento) / 12);
    RETURN idade;
END calcular_idade;

--Descrição: Esta função PL/SQL calcular_idade recebe uma data de nascimento como entrada e retorna a idade em anos. Ela usa a função MONTHS_BETWEEN para obter o número de meses entre a data de nascimento e a data atual, e então divide por 12 para obter a idade em anos.

--2. Formatar Número de Telefone
--Esta ferramenta formata um número de telefone de acordo com um padrão específico.

CREATE OR REPLACE FUNCTION formatar_telefone (
    numero_telefone IN VARCHAR2
) RETURN VARCHAR2
IS
    telefone_formatado VARCHAR2(20);
BEGIN
    telefone_formatado := '(' || SUBSTR(numero_telefone, 1, 2) || ') ' ||
                          SUBSTR(numero_telefone, 3, 4) || '-' ||
                          SUBSTR(numero_telefone, 7, 4);
    RETURN telefone_formatado;
END formatar_telefone;
--Descrição: A função formatar_telefone recebe um número de telefone como uma string e retorna o número formatado no padrão "(XX) XXXX-XXXX", onde "X" representa os dígitos do número de telefone.

--3. Validar E-mail
--Esta ferramenta valida se um endereço de e-mail fornecido está em um formato válido.

CREATE OR REPLACE FUNCTION validar_email (
    email IN VARCHAR2
) RETURN BOOLEAN
IS
BEGIN
    IF REGEXP_LIKE(email, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}$') THEN
        RETURN TRUE;
    ELSE
        RETURN FALSE;
    END IF;
END validar_email;
--Descrição: A função validar_email recebe um endereço de e-mail como entrada e usa expressões regulares para verificar se ele está em um formato válido. Retorna TRUE se o e-mail for válido e FALSE caso contrário.

--4. Gerar Código de Verificação
--Esta ferramenta gera um código de verificação aleatório com base em um comprimento especificado.

CREATE OR REPLACE FUNCTION gerar_codigo_verificacao (
    comprimento IN NUMBER
) RETURN VARCHAR2
IS
    codigo VARCHAR2(50);
BEGIN
    codigo := DBMS_RANDOM.STRING('X', comprimento);
    RETURN codigo;
END gerar_codigo_verificacao;
--Descrição: A função gerar_codigo_verificacao recebe um comprimento como entrada e gera um código de verificação aleatório com o comprimento especificado. O código é composto por caracteres alfanuméricos aleatórios.

--5. Calcular Média de Valores em uma Lista
--Esta ferramenta calcula a média de uma lista de valores numéricos.

CREATE OR REPLACE FUNCTION calcular_media (
    lista_valores IN SYS.ODCINUMBERLIST
) RETURN NUMBER
IS
    soma NUMBER := 0;
    total_valores NUMBER := lista_valores.COUNT;
BEGIN
    FOR i IN 1..lista_valores.COUNT LOOP
        soma := soma + lista_valores(i);
    END LOOP;

    IF total_valores = 0 THEN
        RETURN 0; -- Evita divisão por zero
    ELSE
        RETURN soma / total_valores;
    END IF;
END calcular_media;
--Descrição: A função calcular_media recebe uma lista de valores numéricos como entrada e calcula a média desses valores. Ela itera pela lista, soma todos os valores e então divide pela quantidade total de valores para obter a média. Caso a lista esteja vazia, retorna 0 para evitar a divisão por zero.


--6. Formatar CPF
--Esta ferramenta formata um CPF de entrada em um formato legível.

CREATE OR REPLACE FUNCTION formatar_cpf(
    cpf IN VARCHAR2
) RETURN VARCHAR2
IS
    cpf_formatado VARCHAR2(14);
BEGIN
    cpf_formatado :=
        SUBSTR(cpf, 1, 3) || '.' ||
        SUBSTR(cpf, 4, 3) || '.' ||
        SUBSTR(cpf, 7, 3) || '-' ||
        SUBSTR(cpf, 10, 2);
    RETURN cpf_formatado;
END formatar_cpf;


--7. Verificar se um Número é Primo
-- ferramenta verifica se um número fornecido é primo ou não.

CREATE OR REPLACE FUNCTION is_primo(
    num IN NUMBER
) RETURN BOOLEAN
IS
    divisor NUMBER;
BEGIN
    IF num <= 1 THEN
        RETURN FALSE;
    END IF;

    FOR i IN 2..SQRT(num) LOOP
        IF MOD(num, i) = 0 THEN
            RETURN FALSE;
        END IF;
    END LOOP;

    RETURN TRUE;
END is_primo;


--8. Gerar Senha Aleatória
--Esta ferramenta gera uma senha aleatória com o comprimento especificado.

CREATE OR REPLACE FUNCTION gerar_senha(
    tamanho IN NUMBER
) RETURN VARCHAR2
IS
    caracteres VARCHAR2(100) := 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    senha VARCHAR2(100);
BEGIN
    FOR i IN 1..tamanho LOOP
        senha := senha || SUBSTR(caracteres, CEIL(DBMS_RANDOM.VALUE(1, LENGTH(caracteres))), 1);
    END LOOP;

    RETURN senha;
END gerar_senha;

--9. Validar E-mail
--Esta ferramenta verifica se um e-mail possui um formato válido.

CREATE OR REPLACE FUNCTION validar_email(
    email IN VARCHAR2
) RETURN BOOLEAN
IS
BEGIN
    IF REGEXP_LIKE(email, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}$') THEN
        RETURN TRUE;
    ELSE
        RETURN FALSE;
    END IF;
END validar_email;


--10. Média de uma Coluna
--Calcula a média de uma coluna em uma tabela.

CREATE OR REPLACE FUNCTION calcular_media(
    nome_tabela IN VARCHAR2,
    nome_coluna IN VARCHAR2
) RETURN NUMBER
IS
    media NUMBER;
BEGIN
    EXECUTE IMMEDIATE 'SELECT AVG(' || nome_coluna || ') FROM ' || nome_tabela INTO media;
    RETURN media;
END calcular_media;


--11. Contagem de Ocorrências
--Conta o número de ocorrências de um valor em uma coluna.

CREATE OR REPLACE FUNCTION contar_ocorrencias(
    nome_tabela IN VARCHAR2,
    nome_coluna IN VARCHAR2,
    valor IN VARCHAR2
) RETURN NUMBER
IS
    qtd_ocorrencias NUMBER;
BEGIN
    EXECUTE IMMEDIATE 'SELECT COUNT(*) FROM ' || nome_tabela ||
                      ' WHERE ' || nome_coluna || ' = :1' INTO qtd_ocorrencias
    USING valor;
    RETURN qtd_ocorrencias;
END contar_ocorrencias;


--12. Top N Registros
--Retorna os top N registros ordenados por uma coluna específica.

CREATE OR REPLACE FUNCTION top_n_registros(
    nome_tabela IN VARCHAR2,
    nome_coluna_ordem IN VARCHAR2,
    n IN NUMBER
) RETURN SYS_REFCURSOR
IS
    rc SYS_REFCURSOR;
    query VARCHAR2(1000);
BEGIN
    query := 'SELECT * FROM ' || nome_tabela ||
             ' ORDER BY ' || nome_coluna_ordem || ' DESC FETCH FIRST ' || n || ' ROWS ONLY';

    OPEN rc FOR query;
    RETURN rc;
END top_n_registros;


--13. Calculadora de Correlação
--Calcula a correlação entre duas colunas em uma tabela.


CREATE OR REPLACE FUNCTION calcular_correlacao(
    nome_tabela IN VARCHAR2,
    coluna1 IN VARCHAR2,
    coluna2 IN VARCHAR2
) RETURN NUMBER
IS
    correlacao NUMBER;
BEGIN
    EXECUTE IMMEDIATE 'SELECT CORR(' || coluna1 || ', ' || coluna2 || ') FROM ' || nome_tabela INTO correlacao;
    RETURN correlacao;
END calcular_correlacao;


--14. Média Móvel
--Calcula a média móvel de uma coluna em uma tabela, com base em um período especificado.


CREATE OR REPLACE FUNCTION media_movel(
    nome_tabela IN VARCHAR2,
    nome_coluna IN VARCHAR2,
    periodo IN NUMBER
) RETURN SYS_REFCURSOR
IS
    rc SYS_REFCURSOR;
    query VARCHAR2(1000);
BEGIN
    query := 'SELECT ' || nome_coluna ||
             ', AVG(' || nome_coluna || ') OVER (ORDER BY data ROWS BETWEEN ' || periodo - 1 || ' PRECEDING AND CURRENT ROW) AS media_movel' ||
             ' FROM ' || nome_tabela;

    OPEN rc FOR query;
    RETURN rc;
END media_movel;
